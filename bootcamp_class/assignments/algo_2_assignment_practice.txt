function a(){
  console.log('hello');
}
console.log('Dojo');

// Expected output => 'Dojo'

function a(){
  console.log('hello');
  return 15;
}
x = a();  // x = 'hello', 15 is not actually output
console.log('x is', x);

// Expected output => 'x is 15'

debugger;
function a(n){
  console.log('n is', n);
  return n + 15;
}
x = a(3);
console.log('x is', x);

// Expected output is =>

debugger;
function a(n){
  console.log('n is', n);
  y = n * 2;
  return y;
}
x = a(3) + a(5);
console.log('x is', x);

// Expected output is => n is 3, n is 5, x is 16

function op(a,b){
  c = a + b;
  console.log('c is', c);
  return c;
}
x = op(2,3) + op(3,5);
console.log('x is', x);

// Expected output is => c is 5, c is 8, x is 13

function op(a,b){
  c = a + b;
  console.log('c is', c);
  return c;
}
x = op(2,3) + op(3, op(2,1)) + op(op(2,1),op(2,3));
console.log('x is', x);

// Expected output is => c is 5, c is 3, c is 6, c is 3, c is 5, c is 8

var x = 15;
function a(){
  var x = 10;
}
console.log(x);
a();
console.log(x);  // Globally scoped x => 15 still applies outside the function a()

// Expected output is => 15, 15